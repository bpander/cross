{"version":3,"sources":["lib/crossword/Enums.ts","config/global.ts","util/arrays.ts","components/Grid.tsx","components/Tabs.tsx","containers/container.ts","lib/react-store.tsx","state/board.ts","containers/EditorFillContainer.tsx","lib/getHistoryMiddleware.ts","lib/lens.ts","state/dictionary.ts","parsers/dict.parser.ts","util/objects.ts","lib/crossword/shape.ts","state/shape.ts","util/grid2Ds.ts","state/viewer.ts","state/root.ts","containers/CellsContainer.tsx","lib/TimedDeferred.ts","lib/ThreadPool.ts","icons/Icon.tsx","icons/iconChecker.ts","icons/iconCircle.ts","icons/iconCursor.ts","icons/iconRedo.ts","icons/iconSquare.ts","icons/iconTextRotateVertical.ts","icons/iconTextRotationNone.ts","icons/iconUndo.ts","containers/EditorStructureContainer.tsx","containers/EditorContainer.tsx","lib/createStore.ts","lib/getLocalStorageMiddleware.ts","App.tsx","serviceWorker.js","index.tsx","data/default.dict"],"names":["Direction","BLACK_SYMBOL","includes","arr","needle","indexOf","removeIndex","index","clone","Object","toConsumableArray","splice","replaceIndex","replacement","times","n","mapFn","result","i","push","Grid","react_default","a","createElement","data-group","d","getPathDef","this","props","stroke","vectorEffect","size","cellSize","latitudes","concat","longitudes","join","React","PureComponent","Tabs","className","tabs","map","tab","key","classNames","tabs__trigger--active","active","onClick","onChange","label","panel","mapStoreToContainerProps","store","ownProps","objectSpread","getState","update","StoreContext","createContext","Provider","_React$Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","unsubscribe","state","storeState","inherits","createClass","value","subscribe","prevProps","_this2","newStoreState","setState","providerState","children","Component","injectStore","mapStoreToProps","_React$Component2","WrappedComponent","_getPrototypeOf2","_this3","_len","arguments","length","args","Array","_key","apply","innerRender","Consumer","EvaluationStatus","defaultValue","letters","cursor","direction","Enums","Across","flipMap","_flipMap","defineProperty","Down","toggleDirection","setCursor","emptyUndoHistory","past","lastSavedState","future","identity","x","getLast","history","getNext","item","getHistoryMiddleware","get","hl","triggers","limit","prevState","previous","current","set","slice","some","t","undo","last","redo","next","lensImpl","setParent","modifier","k","other","v","copied","isArray","lens","_","fetchWordList","_ref","asyncToGenerator","regenerator_default","mark","_callee","dictResponse","dictContents","dictResult","wrap","_context","prev","fetch","dictPath","sent","text","success","data","split","filter","line","startsWith","replace","toUpperCase","word","abrupt","wordList","stop","getWordsGrouped","createSelector","groupBy","mapValues","obj","mapper","mappedObject","keys","forEach","hasBorderRight","shape","cell","width","blocks","hasBorderBelow","height","isSlotStart","hasBorderLeft","hasBorderAbove","getSlots","slots","clue","increment","cells","testCell","stepSize","maxCell","goToEnd","id","intersections","slot","openSet","shift","otherSlot","otherSlotIntersectionIndex","otherId","otherIndex","getWordCounts","getCellToClueMap","cellToClueMap","getXY","stride","Math","floor","getIndex","p","_p","slicedToArray","board","Board","setValueAtCursor","editor","p1","p2","blockIndex","midX","midY","mirrorIndex","newLetters","newBlocks","uniq","cursorDirection","getSlotAtCursor","viewerState","Shape","find","getClosedSet","closedSet","runningChars","char","dictionary","viewer","editorHistory","l","editorL","L","fillWordAtSlot","lettersCopy","substr","newState","keyOfLeastFittingWords","evaluator","lowestKey","least","Infinity","curr","minKey","getFittingWords","words","_state$editor$board","leastFittingSlot","getFittingWordsGetters","wordsGrouped","keyBy","pattern","search","re","RegExp","test","getFittingWordsAtSlot","getters","getter","CellsContainer","highlightedSlot","_this$props$editor","y","setter","board__cell--highlight","board__cell--cursor","board__cell--black","alignmentBaseline","fontSize","textAnchor","slotAtCursor","renderCell","noop","TimedDeferred","ms","resolve","reject","onTimeout","promise","Promise","timeoutId","setTimeout","clearTimeout","reason","ThreadPool","path","config","queue","threads","processQueue","datum","deferred","timeout","thread","worker","Worker","onThreadCreated","freeThread","repurposeThread","createThread","then","threadIndex","catch","handleFailedThread","onThreadTimeout","onThreadReady","onQueueEmpty","terminate","EditorFillContainer","getConstraints","fittingWords","evaluateCandidates","fittingWordsAtSlot","threadPool","killAll","enqueue","postMessage","type","payload","onmessage","e","res","evaluation","status","Succeeded","slotId","wordKey","evaluations","Failed","console","log","Processing","TimedOut","onDoubleClick","currentTarget","getAttribute","tabIndex","data-word","Icon","xmlns","viewBox","def","pathDef","iconChecker","name","iconCircle","iconCursor","iconRedo","iconSquare","iconTextRotateVertical","iconTextRotationNone","iconUndo","EditorStructureContainer","onUndoClick","onRedoClick","onToggleBlackClick","onToggleDirectionClick","directionIconDef","disabled","icons_Icon","btn--active","wordCounts","maxGroupLength","maxBy","values","cellGroups","Fragment","renderToolbar","range","style","left","transform","EditorContainer","Route","component","onKeyDown","directionMultiplier","_getXY","min","max","clamp","_getXY3","match","onTabChange","window","addEventListener","removeEventListener","components_Grid","components_Tabs","createStore","initialState","_len2","middleware","_key2","reduce","s","m","listeners","listener","_x","getLocalStorageMiddleware","prefix","lenses","storedValue","JSON","parse","localStorage","getItem","defaultState","newValue","setItem","stringify","createBrowserHistory","App","Router","react_store_Provider","Switch","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.db5c2235.chunk.js","sourcesContent":["\nexport enum Direction {\n  Across = 'A',\n  Down = 'D',\n}\n","\nexport const BLACK_SYMBOL = '.';\n\nexport const BOARD_WIDTH = 630;\n","\nexport const includes = <T>(arr: T[], needle: T): boolean => {\n  return arr.indexOf(needle) !== -1;\n};\n\nexport const removeIndex = <T>(arr: T[], index: number): T[] => {\n  if (index < 0) {\n    return arr;\n  }\n  const clone = [ ...arr ];\n  clone.splice(index, 1);\n  return clone;\n};\n\nexport const replaceIndex = <T>(arr: T[], index: number, replacement: T) => {\n  if (index < 0) {\n    return arr;\n  }\n  const clone = [ ...arr ];\n  clone[index] = replacement;\n  return clone;\n};\n\nexport const removeFirst = <T>(arr: T[], needle: T): T[] => {\n  return removeIndex(arr, arr.indexOf(needle));\n};\n\nexport const times = <T>(n: number, mapFn: (i: number) => T): T[] => {\n  const result: T[] = [];\n  for (let i = 0; i < n; i++) {\n    result.push(mapFn(i));\n  }\n  return result;\n};\n","import React from 'react';\n\nimport { BOARD_WIDTH } from 'config/global';\nimport { times } from 'util/arrays';\n\ninterface GridProps {\n  size: number;\n}\n\nclass Grid extends React.PureComponent<GridProps> {\n\n  static getPathDef(props: GridProps): string {\n    const { size } = props;\n    const cellSize = BOARD_WIDTH / size;\n    const latitudes = times(\n      size - 1,\n      i => `M0,${cellSize + cellSize * i} L${cellSize * size},${cellSize + cellSize * i}`,\n    );\n    const longitudes = times(\n      size - 1,\n      i => `M${cellSize + cellSize * i},0 L${cellSize + cellSize * i},${cellSize * size}`,\n    );\n    return [ ...latitudes, ...longitudes ].join(' ');\n  }\n\n  render() {\n    return (\n      <g data-group=\"grid\">\n        <path\n          d={Grid.getPathDef(this.props)}\n          stroke=\"dimgrey\"\n          vectorEffect=\"non-scaling-stroke\"\n        />\n      </g>\n    );\n  }\n}\n\nexport default Grid;\n","import classNames from 'classnames';\nimport React from 'react';\n\nexport interface Tab {\n  label: JSX.Element | string;\n  panel: () => JSX.Element | string;\n}\n\ninterface TabsProps {\n  tabs: Tab[];\n  active: number;\n  onChange: (index: number) => void;\n}\n\nconst Tabs: React.SFC<TabsProps> = props => (\n  <div className=\"tabs\">\n    <div className=\"tabs__list\">\n      {props.tabs.map((tab, i) => (\n        <button\n          key={i}\n          className={classNames('tabs__trigger', {\n            'tabs__trigger--active': i === props.active,\n          })}\n          onClick={() => props.onChange(i)}\n        >\n          {tab.label}\n        </button>\n      ))}\n    </div>\n    <div className=\"tabs__panel\">\n      {props.tabs[props.active] && props.tabs[props.active].panel()}\n    </div>\n  </div>\n);\n\nexport default Tabs;\n","import { Store } from 'lib/createStore';\nimport { MapStoreToProps } from 'lib/react-store';\nimport { RouteComponentProps } from 'react-router';\nimport { RootState } from 'state/root';\n\ninterface UpdateProp {\n  update: Store<RootState>['update'];\n}\nexport type ContainerProps<P = {}> = RootState & RouteComponentProps<P> & UpdateProp;\n\ntype MapStoreToContainerProps = MapStoreToProps<RootState, RouteComponentProps, ContainerProps>;\n\nexport const mapStoreToContainerProps: MapStoreToContainerProps = (store, ownProps) => {\n  return { ...store.getState(), ...ownProps, update: store.update };\n};\n","import React from 'react';\n\nimport { Store, Unsubscribe } from 'lib/createStore';\n\ninterface ContextValue<T> {\n  store: Store<T> | null;\n}\n\ninterface ProviderProps<T> {\n  store: Store<T>;\n}\n\ninterface ProviderState<T> {\n  storeState: T;\n}\n\n// tslint:disable-next-line no-any\nconst StoreContext = React.createContext<ContextValue<any>>({ store: null });\n\nexport class Provider<T> extends React.Component<ProviderProps<T>, ProviderState<T>> {\n\n  unsubscribe: Unsubscribe | null = null;\n\n  constructor(props: ProviderProps<T>) {\n    super(props);\n    this.state = {\n      storeState: this.props.store.getState(),\n    };\n  }\n\n  componentDidMount() {\n    this.subscribe();\n  }\n\n  componentDidUpdate(prevProps: ProviderProps<T>) {\n    if (this.props.store !== prevProps.store) {\n      if (this.unsubscribe) { this.unsubscribe(); }\n      this.subscribe();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) { this.unsubscribe(); }\n  }\n\n  subscribe() {\n    const { store } = this.props;\n    this.unsubscribe = store.subscribe(newStoreState => {\n      this.setState(providerState => {\n        if (providerState.storeState === newStoreState) {\n          return null;\n        }\n        return { storeState: newStoreState };\n      });\n    });\n  }\n\n  render() {\n    return (\n      <StoreContext.Provider value={{ store: this.props.store }}>\n        {this.props.children}\n      </StoreContext.Provider>\n    );\n  }\n}\n\nexport interface MapStoreToProps<T, TOwnProps, P> {\n  (store: Store<T>, ownProps: TOwnProps): P;\n}\n\nexport const injectStore = function<T, TOwnProps, P>(mapStoreToProps: MapStoreToProps<T, TOwnProps, P>) {\n  return (Component: React.ComponentType<P>) => {\n    return class WrappedComponent extends React.Component<TOwnProps> {\n      innerRender = (value: ContextValue<T>) => (\n        value.store && <Component {...mapStoreToProps(value.store, this.props)} />\n      );\n\n      render() {\n        return <StoreContext.Consumer>{this.innerRender}</StoreContext.Consumer>;\n      }\n    };\n  };\n};\n","import Dictionary from 'definitions/Dictionary';\nimport * as Enums from 'lib/crossword/Enums';\nimport { Setter } from 'lib/lens';\n\nexport interface BoardState {\n  letters: string[];\n  cursor: number;\n  direction: Enums.Direction;\n}\n\nexport const defaultValue: BoardState = {\n  letters: [],\n  cursor: 0,\n  direction: Enums.Direction.Across,\n};\n\nconst flipMap: Dictionary<Enums.Direction> = {\n  [Enums.Direction.Across]: Enums.Direction.Down,\n  [Enums.Direction.Down]: Enums.Direction.Across,\n};\n\nexport const toggleDirection: Setter<BoardState> = state => {\n  return { ...state, direction: flipMap[state.direction] };\n};\n\nexport const setCursor = (cursor: number): Setter<BoardState> => state => {\n  return { ...state, cursor };\n};\n","// tslint:disable no-console\n// TODO: ^Remove when no longer needed\nimport React from 'react';\nimport { createSelector } from 'reselect';\n\nimport { Constraints, ClosedSet } from 'lib/crossword/Types';\nimport { injectStore } from 'lib/react-store';\nimport ThreadPool, { Thread } from 'lib/ThreadPool';\nimport { getFittingWords, RootState, getFittingWordsAtSlot, L, fillWordAtSlot } from 'state/root';\nimport { getSlots } from 'state/shape';\nimport { getClosedSet, getSlotAtCursor } from 'state/viewer';\nimport { ContainerProps, mapStoreToContainerProps } from './container';\n\nenum EvaluationStatus {\n  Processing,\n  Succeeded,\n  Failed,\n  TimedOut,\n}\n\ninterface EvaluationBase<T> {\n  status: T;\n  slotId: string;\n  wordKey: string;\n}\n\ntype EvaluationProcessing = EvaluationBase<EvaluationStatus.Processing>;\ntype EvaluationFailed = EvaluationBase<EvaluationStatus.Failed>;\ntype EvaluationTimedOut = EvaluationBase<EvaluationStatus.TimedOut>;\ntype EvaluationSucceeded = EvaluationBase<EvaluationStatus.Succeeded> & { closedSet: ClosedSet; };\n\ntype Evaluation = EvaluationProcessing | EvaluationFailed | EvaluationTimedOut | EvaluationSucceeded;\n\ninterface EditorFillContainerState {\n  evaluations: { [wordKey: string]: Evaluation };\n}\n\nclass EditorFillContainer extends React.Component<ContainerProps, EditorFillContainerState> {\n\n  threadPool: ThreadPool<string>;\n\n  getConstraints = createSelector(\n    (state: RootState) => getSlots(state.editor.shape),\n    (state: RootState) => getFittingWords(state),\n    (state: RootState) => getSlotAtCursor(state.editor),\n    (state: RootState) => getClosedSet(state.editor),\n    (slots, fittingWords, slot, closedSet) => {\n      if (!slot) {\n        return null;\n      }\n      const constraints: Constraints = { slots, fittingWords, slot, closedSet };\n      return constraints;\n    },\n  );\n\n  evaluateCandidates = createSelector(\n    getFittingWordsAtSlot,\n    fittingWordsAtSlot => {\n      this.threadPool.killAll();\n      if (fittingWordsAtSlot.length) {\n        this.threadPool.enqueue(fittingWordsAtSlot.slice(0, 100));\n      }\n    },\n  );\n\n  constructor(props: ContainerProps) {\n    super(props);\n    this.state = {\n      evaluations: {},\n    };\n    this.threadPool = new ThreadPool('solver.worker.js', {\n      limit: 8,\n      timeout: 1000 * 10,\n      onThreadCreated: this.onThreadCreated,\n      onThreadReady: this.onThreadReady,\n      onThreadTimeout: this.onThreadTimeout,\n      onQueueEmpty: () => console.log('done'),\n    });\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => this.evaluateCandidates(this.props), 0);\n  }\n\n  componentWillUnmount() {\n    this.threadPool.killAll();\n  }\n\n  onThreadCreated = (thread: Thread<string>) => {\n    thread.worker.postMessage({\n      type: 'prepare',\n      payload: this.getConstraints(this.props),\n    });\n  };\n\n  onThreadReady = (thread: Thread<string>) => {\n    const slotAtCursor = getSlotAtCursor(this.props.editor);\n    if (!slotAtCursor) {\n      return;\n    }\n    thread.worker.onmessage = e => {\n      if (e.data.res.success) {\n        const evaluation: EvaluationSucceeded = {\n          status: EvaluationStatus.Succeeded,\n          slotId: slotAtCursor.id,\n          wordKey: thread.datum,\n          closedSet: e.data.res.closedSet,\n        };\n        this.setState({\n          evaluations: { ...this.state.evaluations, [evaluation.wordKey]: evaluation },\n        });\n      } else {\n        const evaluation: EvaluationFailed = {\n          status: EvaluationStatus.Failed,\n          slotId: slotAtCursor.id,\n          wordKey: thread.datum,\n        };\n        this.setState({\n          evaluations: { ...this.state.evaluations, [evaluation.wordKey]: evaluation },\n        });\n        console.log('fail', thread.datum);\n      }\n      thread.deferred.resolve();\n    };\n    thread.worker.postMessage({ type: 'process', payload: thread.datum });\n    const evaluation: EvaluationProcessing = {\n      status: EvaluationStatus.Processing,\n      wordKey: thread.datum,\n      slotId: slotAtCursor.id,\n    };\n    this.setState({\n      evaluations: { ...this.state.evaluations, [evaluation.wordKey]: evaluation },\n    });\n  };\n\n  onThreadTimeout = (thread: Thread<string>) => {\n    const slotAtCursor = getSlotAtCursor(this.props.editor);\n    if (!slotAtCursor) {\n      return;\n    }\n    const evaluation: EvaluationTimedOut = {\n      status: EvaluationStatus.TimedOut,\n      wordKey: thread.datum,\n      slotId: slotAtCursor.id,\n    };\n    this.setState({\n      evaluations: { ...this.state.evaluations, [evaluation.wordKey]: evaluation },\n    });\n  };\n\n  onDoubleClick: React.MouseEventHandler<HTMLElement> = e => {\n    const slot = getSlotAtCursor(this.props.editor);\n    const word = e.currentTarget.getAttribute('data-word');\n    if (!slot || !word) {\n      return;\n    }\n    this.props.update(L.set(fillWordAtSlot(word, slot)));\n  };\n\n  render() {\n    const fittingWordsAtSlot = getFittingWordsAtSlot(this.props);\n    const { evaluations } = this.state;\n    return (\n      <div>\n        <div>Fill</div>\n        <table>\n          <tbody>\n            {fittingWordsAtSlot.slice(0, 100).map(word => (\n              <tr\n                key={word}\n                tabIndex={0}\n                data-word={word}\n                onDoubleClick={this.onDoubleClick}\n                className={`row row--${evaluations[word] && evaluations[word].status}`}\n              >\n                <td>{evaluations[word] && evaluations[word].status}</td>\n                <td>{word}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default injectStore(mapStoreToContainerProps)(EditorFillContainer);\n","import { Middleware } from 'lib/createStore';\nimport { Getter, Lens, Setter } from 'lib/lens';\n\nexport interface UndoHistory<T> {\n  past: T[];\n  lastSavedState: T | null;\n  future: T[];\n}\n\n// tslint:disable-next-line no-any\nexport const emptyUndoHistory: UndoHistory<any> = {\n  past: [],\n  lastSavedState: null,\n  future: [],\n};\n\nconst identity = <T>(x: T): T => x;\n\nexport const getLast = <U>(history: UndoHistory<U>): U | undefined => {\n  return history.past[history.past.length - 1];\n};\n\nexport const getNext = <U>(history: UndoHistory<U>): U | undefined => {\n  return history.future[0];\n};\n\ninterface GetHistoryMiddleware {\n  <T, U>(\n    get: Getter<T, U>,\n    hl: Lens<T, UndoHistory<U>>,\n    triggers: Getter<T, {}>[],\n    limit: number,\n  ): Middleware<T>;\n}\n\nconst push = <T>(arr: T[], item: T | null): T[] => {\n  return (item) ? [ ...arr, item ] : arr;\n};\n\nconst unshift = <T>(arr: T[], item: T | null): T[] => {\n  return (item) ? [ item, ...arr ] : arr;\n};\n\nconst getHistoryMiddleware: GetHistoryMiddleware = (get, hl, triggers, limit) => {\n  return (state, prevState) => {\n    if (!prevState) {\n      return state;\n    }\n    const previous = get(prevState);\n    const current = get(state);\n    if (previous === current) {\n      return state;\n    }\n    return hl.set(history => {\n      if (getLast(history) === current) {\n        return {\n          past: history.past.slice(0, -1),\n          lastSavedState: current,\n          future: unshift(history.future, history.lastSavedState),\n        };\n      }\n      if (getNext(history) === current) {\n        return {\n          past: push(history.past, history.lastSavedState),\n          lastSavedState: current,\n          future: history.future.slice(1),\n        };\n      }\n      if (triggers.some(t => t(state) !== t(prevState))) {\n        return {\n          past: [ ...history.past, previous ].slice(limit * -1),\n          lastSavedState: current,\n          future: [],\n        };\n      }\n      return history;\n    })(state);\n  };\n};\n\nexport default getHistoryMiddleware;\n\nexport const undo = <U>(history: UndoHistory<U>): Setter<U> => {\n  const last = getLast(history);\n  if (!last) {\n    return identity;\n  }\n  return () => last;\n};\n\nexport const redo = <U>(history: UndoHistory<U>): Setter<U> => {\n  const next = getNext(history);\n  if (!next) {\n    return identity;\n  }\n  return () => next;\n};\n","\nexport type Getter<T, V> = (target: T) => V;\nexport type Setter<T>    = (target: T) => T;\n\nexport type Lens<T, U> = {\n  get: Getter<T, U>;\n  set: {\n    (value: U): Setter<T>;\n    (f: Setter<U>): Setter<T>;\n  };\n  k: { <K extends keyof U>(key: K): Lens<T, U[K]>; };\n};\n\ninterface SetParent<T, U> {\n  (value: U): Setter<T>;\n}\n\nconst copy = <T>(x: T): T => {\n  if (Array.isArray(x)) {\n    return x.slice() as {} as T;\n  } else if (x && typeof x === 'object') {\n    return { ...x };\n  } else {\n    return x;\n  }\n};\n\nconst lensImpl = <T, U>(get: Getter<T, U>, setParent: SetParent<T, U>): Lens<T, U> => {\n\n  const compose = <V>(other: Lens<U, V>): Lens<T, V> => {\n    return lensImpl(\n      t => other.get(get(t)),\n      v => t => {\n        return setParent(other.set(v)(get(t)))(t);\n      },\n    );\n  };\n\n  const k = <K extends keyof U>(key: K): Lens<T, U[K]> => {\n    return compose(lensImpl(\n      t => t[key],\n      v => t => {\n        if (v === t[key]) {\n          return t;\n        }\n        const copied = copy(t);\n        copied[key] = v;\n        return copied;\n      },\n    ));\n  };\n\n  const set = (modifier: U | Setter<U>) => {\n    if (typeof modifier === 'function') {\n      return (t: T) => setParent((modifier as Setter<U>)(get(t)))(t);\n    } else {\n      return setParent(modifier);\n    }\n  };\n\n  return { get, set, k };\n};\n\nexport const lens = <T>(): Lens<T, T> => lensImpl(t => t, v => _ => v);\n","import groupBy from 'lodash/groupBy';\nimport { createSelector } from 'reselect';\n\nimport dictPath from 'data/default.dict';\nimport { Setter } from 'lib/lens';\nimport { parser } from 'parsers/dict.parser';\n\nexport interface DictionaryState {\n  wordList: string[];\n}\n\nexport const defaultValue: DictionaryState = {\n  wordList: [],\n};\n\nexport const fetchWordList = async (): Promise<Setter<DictionaryState>> => {\n  const dictResponse = await fetch(dictPath);\n  const dictContents = await dictResponse.text();\n  const dictResult = parser(dictContents);\n  return state => ({ ...state, wordList: dictResult.data });\n};\n\nexport const getWordsGrouped = createSelector(\n  (state: DictionaryState) => state.wordList,\n  wordList => groupBy(wordList, 'length'),\n);\n","interface ParseResult<T> {\n  success: boolean;\n  data: T;\n}\n\nexport const parser = (contents: string): ParseResult<string[]> => {\n  const lines = contents.split('\\n');\n  const parsableLines = lines.filter(line => !line.startsWith('#'));\n  const words: string[] = parsableLines.map(line => {\n    return line.replace(/[^a-zA-Z]/g, '').toUpperCase();\n  });\n  const data = words.filter(word => word.length >= 3 && word.length <= 15);\n  return { success: true, data };\n};\n","import Dictionary from 'definitions/Dictionary';\n\ninterface ObjectMapper<T, R = T> {\n  (value: T, key: string, obj: Dictionary<T>): R;\n}\n\nexport const mapValues = <T, R = T>(obj: Dictionary<T>, mapper: ObjectMapper<T, R>): Dictionary<R> => {\n  const mappedObject: Dictionary<R> = {};\n  Object.keys(obj).forEach(key => {\n    mappedObject[key] = mapper(obj[key], key, obj);\n  });\n\n  return mappedObject;\n};\n\nexport const values = <T extends object>(obj: T): Array<T[keyof T]> => {\n  return Object.keys(obj).map(key => obj[(key as keyof T)]);\n};\n\nexport const minKey = <T>(obj: Dictionary<T>, evaluator: ObjectMapper<T, number>) => {\n  let least = Infinity;\n  let lowestKey: string | undefined;\n  Object.keys(obj).forEach(key => {\n    const curr = evaluator(obj[key], key, obj);\n    if (curr < least) {\n      lowestKey = key;\n      least = curr;\n    }\n  });\n  return lowestKey;\n};\n","import { includes, times } from 'util/arrays';\nimport { values } from 'util/objects';\n\nimport * as Enums from './Enums';\nimport * as Types from './Types';\n\nconst hasBorderAbove = (shape: Types.Shape, cell: Types.Cell): boolean => {\n  return cell < shape.width || includes(shape.blocks, cell - shape.width);\n};\n\nconst hasBorderRight = (shape: Types.Shape, cell: Types.Cell): boolean => {\n  return cell % shape.width === (shape.width - 1) || includes(shape.blocks, cell + 1);\n};\n\nconst hasBorderLeft = (shape: Types.Shape, cell: Types.Cell): boolean => {\n  return cell % shape.width === 0 || includes(shape.blocks, cell - 1);\n};\n\nconst hasBorderBelow = (shape: Types.Shape, cell: Types.Cell): boolean => {\n  return cell >= shape.width * (shape.height - 1) || includes(shape.blocks, cell + shape.width);\n};\n\nconst goToEnd = (shape: Types.Shape, cell: Types.Cell, direction: Enums.Direction): number[] => {\n  let testCell = cell;\n  const arr = [];\n  const stepSize = (direction === Enums.Direction.Across) ? 1 : shape.width;\n  const maxCell = shape.width * shape.height;\n  while (testCell < maxCell) {\n    arr.push(testCell);\n    if (direction === Enums.Direction.Across) {\n      if (hasBorderRight(shape, testCell)) {\n        break;\n      }\n    } else {\n      if (hasBorderBelow(shape, testCell)) {\n        break;\n      }\n    }\n    testCell += stepSize;\n  }\n  return arr;\n};\n\nconst isSlotStart = (shape: Types.Shape, cell: Types.Cell, direction: Enums.Direction): boolean => {\n  switch (direction) {\n    case Enums.Direction.Across: return hasBorderLeft(shape, cell);\n    case Enums.Direction.Down: return hasBorderAbove(shape, cell);\n  }\n};\n\nexport const getSlots = (shape: Types.Shape): Types.Slot[] => {\n  const slots: Types.Slot[] = [];\n  let clue = 1;\n  times(shape.width * shape.height, cell => {\n    if (includes(shape.blocks, cell)) {\n      return;\n    }\n    let increment = 0;\n    values(Enums.Direction).forEach(direction => {\n      if (isSlotStart(shape, cell, direction)) {\n        const cells = goToEnd(shape, cell, direction);\n        if (cells.length > 1) {\n          slots.push({ id: clue + direction, clue, direction, cells, intersections: [] });\n          increment = 1;\n        }\n      }\n    });\n    clue += increment;\n  });\n\n  const openSet = [ ...slots ];\n  let slot: Types.Slot | undefined;\n  while (slot = openSet.shift()) {\n    slot.cells.forEach((cell, i) => {\n      openSet.some(otherSlot => {\n        const otherSlotIntersectionIndex = otherSlot.cells.indexOf(cell);\n        if (otherSlotIntersectionIndex === -1) {\n          return false;\n        }\n        otherSlot.intersections.push({\n          index: otherSlotIntersectionIndex,\n          otherId: slot!.id,\n          otherIndex: i,\n        });\n        slot!.intersections.push({\n          index: i,\n          otherId: otherSlot.id,\n          otherIndex: otherSlotIntersectionIndex,\n        });\n        return true;\n      });\n    });\n  }\n\n  return slots;\n};\n","import groupBy from 'lodash/groupBy';\nimport { createSelector } from 'reselect';\n\nimport * as shape from 'lib/crossword/shape';\nimport { CellToClueMap, Shape } from 'lib/crossword/Types';\n\nexport interface ShapeState extends Shape {}\n\nexport const defaultValue: ShapeState = {\n  width: 15,\n  height: 15,\n  blocks: [],\n};\n\nexport const getSlots = createSelector(\n  (state: ShapeState) => state,\n  state => shape.getSlots(state),\n);\n\nexport const getWordCounts = createSelector(\n  getSlots,\n  slots => groupBy(slots, slot => slot.cells.length),\n);\n\nexport const getCellToClueMap = createSelector(\n  getSlots,\n  slots => {\n    const cellToClueMap: CellToClueMap = {};\n    slots.forEach(slot => {\n      cellToClueMap[slot.cells[0]] = slot.clue;\n    });\n    return cellToClueMap;\n  },\n);\n","\ntype Vector2 = [ number, number ];\n\nexport const getXY = (stride: number, index: number): Vector2 => {\n  const x = index % stride;\n  const y = Math.floor(index / stride);\n  return [ x, y ];\n};\n\nexport const getIndex = (stride: number, p: Vector2): number => {\n  const [ x, y ] = p;\n  return y * stride + x;\n};\n\nexport const reflectXY = (p1: Vector2, p2: Vector2): Vector2 => {\n  return [\n    p2[0] + (p2[0] - p1[0]),\n    p2[1] + (p2[1] - p1[1]),\n  ];\n};\n","import uniq from 'lodash/uniq';\nimport { createSelector } from 'reselect';\n\nimport { BLACK_SYMBOL } from 'config/global';\nimport * as Enums from 'lib/crossword/Enums';\nimport { ClosedSet } from 'lib/crossword/Types';\nimport { lens, Setter } from 'lib/lens';\nimport * as Board from 'state/board';\nimport * as Shape from 'state/shape';\nimport { includes, removeFirst, removeIndex, replaceIndex } from 'util/arrays';\nimport { getIndex, getXY, reflectXY } from 'util/grid2Ds';\n\nexport interface ViewerState {\n  shape: Shape.ShapeState;\n  board: Board.BoardState;\n}\n\nexport const defaultValue: ViewerState = {\n  shape: Shape.defaultValue,\n  board: Board.defaultValue,\n};\n\n// TODO: Split this up\nexport const setValueAtCursor = (value: string): Setter<ViewerState> => {\n  return editor => {\n    const { board, shape } = editor;\n    if (value === BLACK_SYMBOL) {\n      const blockIndex = shape.blocks.indexOf(board.cursor);\n      const midX = (shape.width - 1) / 2; // TODO: Handle decimals\n      const midY = (shape.height - 1) / 2;\n      const mirrorIndex = getIndex(shape.width, reflectXY(getXY(shape.width, board.cursor), [ midX, midY ]));\n      if (blockIndex === -1) {\n        const newLetters = replaceIndex(\n          replaceIndex(board.letters, board.cursor, ''), mirrorIndex, '',\n        );\n        const newBlocks = [ ...shape.blocks, ...uniq([ board.cursor, mirrorIndex ]) ];\n        return {\n          shape: { ...shape, blocks: newBlocks },\n          board: { ...board, letters: newLetters },\n        };\n      } else {\n        const newBlocks = removeFirst(removeIndex(shape.blocks, blockIndex), mirrorIndex);\n        return lens<ViewerState>().k('shape').k('blocks').set(newBlocks)(editor);\n      }\n    }\n    const cursorDirection = (value === '') ? -1 : 1;\n    const stepSize = (board.direction === Enums.Direction.Across) ? 1 : shape.width;\n    return lens<ViewerState>().k('board').set(state => ({\n      ...state,\n      letters: replaceIndex(state.letters, state.cursor, value),\n      cursor: state.cursor + (cursorDirection * stepSize),\n    }))(editor);\n  };\n};\n\nexport const getSlotAtCursor = createSelector(\n  (viewerState: ViewerState) => Shape.getSlots(viewerState.shape),\n  (viewerState: ViewerState) => viewerState.board.cursor,\n  (viewerState: ViewerState) => viewerState.board.direction,\n  (slots, cursor, direction) => {\n    return slots.find(slot => slot.direction === direction && includes(slot.cells, cursor));\n  },\n);\n\nexport const getClosedSet = createSelector(\n  (viewerState: ViewerState) => Shape.getSlots(viewerState.shape),\n  (viewerState: ViewerState) => viewerState.board.letters,\n  (slots, letters) => {\n    const closedSet: ClosedSet = {};\n    slots.forEach(slot => {\n      let runningChars: string = '';\n      for (let i = 0; i < slot.cells.length; i++) {\n        const char = letters[slot.cells[i]];\n        if (!char) {\n          return;\n        }\n        runningChars += char;\n      }\n      closedSet[slot.id] = runningChars;\n    });\n    return closedSet;\n  },\n);\n","import keyBy from 'lodash/keyBy';\nimport { createSelector } from 'reselect';\n\nimport { emptyUndoHistory, UndoHistory } from 'lib/getHistoryMiddleware';\nimport { lens, Setter } from 'lib/lens';\nimport * as dictionary from 'state/dictionary';\nimport { getSlots } from 'state/shape';\nimport * as viewer from 'state/viewer';\nimport { mapValues, minKey } from 'util/objects';\nimport { Slot } from 'lib/crossword/Types';\n\nexport interface RootState {\n  dictionary: dictionary.DictionaryState;\n  editor: viewer.ViewerState;\n  editorHistory: UndoHistory<viewer.ViewerState>;\n}\n\nexport const defaultValue: RootState = {\n  dictionary: dictionary.defaultValue,\n  editor: viewer.defaultValue,\n  editorHistory: emptyUndoHistory,\n};\n\nconst l = lens<RootState>();\nconst editorL = l.k('editor');\n\nexport const L = {\n  ...l,\n  dictionary: l.k('dictionary'),\n  editor: {\n    ...editorL,\n    board: editorL.k('board'),\n    shape: editorL.k('shape'),\n  },\n  editorHistory: l.k('editorHistory'),\n};\n\nexport const fillWordAtSlot = (word: string, slot: Slot): Setter<RootState> => state => {\n  const lettersCopy = [ ...state.editor.board.letters ];\n  slot.cells.forEach((cell, i) => {\n    lettersCopy[cell] = word.substr(i, 1);\n  });\n  const newState = L.editor.board.k('letters').set(lettersCopy)(state);\n  const fittingWords = getFittingWords(newState);\n  const keyOfLeastFittingWords = minKey(fittingWords, words => {\n    if (!words) {\n      return Infinity;\n    }\n    return words.length;\n  });\n\n  let { cursor, direction } = state.editor.board;\n  if (keyOfLeastFittingWords) {\n    const slots = getSlots(state.editor.shape);\n    const leastFittingSlot = slots.find(slot => slot.id === keyOfLeastFittingWords);\n    if (leastFittingSlot) {\n      cursor = leastFittingSlot.cells[0];\n      direction = leastFittingSlot.direction;\n    }\n  }\n\n  return L.editor.board.set(board => ({ ...board, cursor, direction }))(newState);\n};\n\nexport const getFittingWordsGetters = createSelector(\n  (state: RootState) => getSlots(state.editor.shape),\n  (state: RootState) => dictionary.getWordsGrouped(state.dictionary),\n  (slots, wordsGrouped) => {\n    return mapValues(keyBy(slots, 'id'), slot => {\n      return createSelector(\n        (letters: string[]) => slot.cells.map(cell => letters[cell] || '.').join(''),\n        pattern => {\n          if (!pattern.includes('.')) {\n            return null;\n          }\n          if (pattern.search(/[A-Z]/) === -1) {\n            return wordsGrouped[pattern.length];\n          }\n          const re = new RegExp(`^${pattern}$`);\n          const r = wordsGrouped[pattern.length].filter(word => re.test(word));\n          return r;\n        },\n      );\n    });\n  },\n);\n\nexport const getFittingWordsAtSlot = (state: RootState) => {\n  const slot = viewer.getSlotAtCursor(state.editor);\n  if (!slot) {\n    return [];\n  }\n  const getters = getFittingWordsGetters(state);\n  return getters[slot.id](state.editor.board.letters) || [];\n};\n\nexport const getFittingWords = createSelector(\n  (state: RootState) => getFittingWordsGetters(state),\n  (state: RootState) => state.editor.board.letters,\n  (getters, letters) => mapValues(getters, getter => getter(letters)),\n);\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { BOARD_WIDTH } from 'config/global';\nimport { ContainerProps, mapStoreToContainerProps } from 'containers/container';\nimport * as Types from 'lib/crossword/Types';\nimport { injectStore } from 'lib/react-store';\nimport { setCursor, toggleDirection } from 'state/board';\nimport { L } from 'state/root';\nimport { getCellToClueMap } from 'state/shape';\nimport { getSlotAtCursor } from 'state/viewer';\nimport { includes, times } from 'util/arrays';\n\nclass CellsContainer extends React.Component<ContainerProps> {\n\n  renderCell(cell: number, cellToClueMap: { [cell: number]: number; }, highlightedSlot?: Types.Slot) {\n    const { board, shape } = this.props.editor;\n    const cellSize = BOARD_WIDTH / shape.width;\n    const x = (cell % shape.width) * cellSize;\n    const y = Math.floor(cell / shape.width) * cellSize;\n\n    return (\n      <g\n        key={cell}\n        onClick={() => {\n          const setter = (cell === board.cursor)\n            ? L.editor.board.set(toggleDirection)\n            : L.editor.board.set(setCursor(cell));\n          this.props.update(setter);\n        }}\n      >\n        <rect\n          x={x}\n          y={y}\n          width={cellSize}\n          height={cellSize}\n          className={classNames('board__cell', {\n            'board__cell--highlight': highlightedSlot && includes(highlightedSlot.cells, cell),\n            'board__cell--cursor': cell === board.cursor,\n            'board__cell--black': includes(shape.blocks, cell),\n          })}\n        />\n        {(cellToClueMap[cell]) && (\n          <text\n            x={x + cellSize * 0.05}\n            y={y + cellSize * 0.05}\n            alignmentBaseline=\"hanging\"\n            fontSize={cellSize * 0.3}\n          >\n            {cellToClueMap[cell]}\n          </text>\n        )}\n        {(board.letters[cell]) && (\n          <text\n            x={x + (cellSize / 2)}\n            y={y + cellSize - (cellSize * 0.1)}\n            textAnchor=\"middle\"\n            alignmentBaseline=\"baseline\"\n            fontSize={cellSize * 0.8}\n          >\n            {board.letters[cell]}\n          </text>\n        )}\n      </g>\n    );\n  }\n\n  render() {\n    const { shape } = this.props.editor;\n    const cellToClueMap = getCellToClueMap(shape);\n    const slotAtCursor = getSlotAtCursor(this.props.editor);\n\n    return (\n      <g data-group=\"cells\">\n        {times(shape.width * shape.height, i => this.renderCell(i, cellToClueMap, slotAtCursor))}\n      </g>\n    );\n  }\n}\n\nexport default injectStore(mapStoreToContainerProps)(CellsContainer);\n","const noop = () => {}; // tslint:disable-line no-empty\n\nexport default class TimedDeferred<T> {\n\n  ms: number;\n  promise: Promise<T>;\n  resolve: (value: T | PromiseLike<T>) => void;\n  reject: (reason?: any) => void; // tslint:disable-line no-any\n  onTimeout: () => void;\n\n  constructor(ms: number) {\n    this.ms = ms;\n    this.resolve = noop;\n    this.reject = noop;\n    this.onTimeout = noop;\n    this.promise = new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(\n        () => {\n          this.onTimeout();\n          reject();\n        },\n        ms,\n      );\n      this.resolve = (value: T | PromiseLike<T>) => {\n        clearTimeout(timeoutId);\n        resolve(value);\n      };\n      this.reject = (reason?: any) => { // tslint:disable-line no-any\n        clearTimeout(timeoutId);\n        reject(reason);\n      };\n    });\n  }\n}\n","import TimedDeferred from 'lib/TimedDeferred';\n\nexport interface Thread<T> {\n  datum: T;\n  deferred: TimedDeferred<void>;\n  worker: Worker;\n}\n\ninterface ThreadPoolConfig<T> {\n  limit: number;\n  timeout: number;\n  onThreadCreated: (thread: Thread<T>) => void;\n  onThreadReady: (thread: Thread<T>) => void;\n  onThreadTimeout: (thread: Thread<T>) => void;\n  onQueueEmpty: () => void;\n}\n\nexport default class ThreadPool<T> {\n\n  path: string;\n  config: ThreadPoolConfig<T>;\n  queue: T[];\n  threads: Thread<T>[];\n\n  constructor(path: string, config: ThreadPoolConfig<T>) {\n    this.path = path;\n    this.config = config;\n    this.queue = [];\n    this.threads = [];\n  }\n\n  enqueue(data: T[]) {\n    this.queue = this.queue.concat(data);\n    this.processQueue();\n  }\n\n  createThread(datum: T) {\n    const deferred = new TimedDeferred<void>(this.config.timeout);\n    const worker = new Worker(this.path);\n    const thread: Thread<T> = { datum, worker, deferred };\n    this.config.onThreadCreated(thread);\n    return thread;\n  }\n\n  repurposeThread(freeThread: Thread<T>, datum: T) {\n    const deferred = new TimedDeferred<void>(this.config.timeout);\n    const thread: Thread<T> = { datum, worker: freeThread.worker, deferred };\n    return thread;\n  }\n\n  processQueue(freeThread?: Thread<T>) {\n    if (!this.queue.length) {\n      if (!this.threads.length) {\n        this.config.onQueueEmpty();\n      }\n      return;\n    }\n    let thread: Thread<T>;\n    if (!freeThread) {\n      if (this.threads.length >= this.config.limit) {\n        return;\n      }\n      const datum = this.queue.shift()!;\n      thread = this.createThread(datum);\n    } else {\n      const datum = this.queue.shift()!;\n      thread = this.repurposeThread(freeThread, datum);\n    }\n    thread.deferred.promise.then(() => {\n      const threadIndex = this.threads.indexOf(thread);\n      if (threadIndex > -1) {\n        this.threads.splice(threadIndex, 1);\n      }\n      this.processQueue(thread);\n    }).catch(() => this.handleFailedThread(thread));\n    thread.deferred.onTimeout = () => this.config.onThreadTimeout(thread);\n    this.threads.push(thread);\n    this.config.onThreadReady(thread);\n    this.processQueue();\n  }\n\n  handleFailedThread(thread: Thread<T>) {\n    const threadIndex = this.threads.indexOf(thread);\n    if (threadIndex > -1) {\n      this.threads.splice(threadIndex, 1);\n    }\n    thread.worker.terminate();\n    this.processQueue();\n  }\n\n  killAll() {\n    this.queue = [];\n    [ ...this.threads ].forEach(thread => thread.deferred.reject());\n  }\n}\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport IconDef from './IconDef';\n\ninterface IconProps {\n  def: IconDef;\n  className?: string;\n}\n\nclass Icon extends React.PureComponent<IconProps> {\n  render() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        className={classNames('icon', this.props.className)}\n      >\n        <path d={this.props.def.pathDef} />\n      </svg>\n    );\n  }\n}\n\nexport default Icon;\n","// tslint:disable max-line-length\nimport IconDef from './IconDef';\n\nconst iconChecker: IconDef = {\n  name: 'checker',\n  pathDef: 'M21.93,3.6l-.06-.2a2.3,2.3,0,0,0-.15-.32,3.21,3.21,0,0,0-.21-.3,2.27,2.27,0,0,0-.31-.31l-.15-.11-.17-.11-.25-.11a1.09,1.09,0,0,0-.24-.07A1.9,1.9,0,0,0,19.85,2H4.14A2.14,2.14,0,0,0,2,4.14V19.85a1.88,1.88,0,0,0,.07.53,2.12,2.12,0,0,0,.49.91,1.06,1.06,0,0,0,.15.15,2.14,2.14,0,0,0,.9.49,2.35,2.35,0,0,0,.54.07H19.86A2.14,2.14,0,0,0,22,19.85V4.14A2.35,2.35,0,0,0,21.93,3.6ZM20.57,19.85a.71.71,0,0,1-.72.71H12V12H3.43V4.14a.72.72,0,0,1,.71-.72H12V12h8.57Z',\n};\n\nexport default iconChecker;\n","// tslint:disable max-line-length\nimport IconDef from './IconDef';\n\nconst iconCircle: IconDef = {\n  name: 'circle',\n  pathDef: 'M12,2C6.5,2,2,6.5,2,12s4.5,10,10,10s10-4.5,10-10S17.5,2,12,2z M12,20.1c-4.5,0-8.1-3.6-8.1-8.1S7.5,3.9,12,3.9s8.1,3.6,8.1,8.1S16.5,20.1,12,20.1z',\n};\n\nexport default iconCircle;\n","// tslint:disable max-line-length\nimport IconDef from './IconDef';\n\nconst iconCursor: IconDef = {\n  name: 'cursor',\n  pathDef: 'M12,3.62A5.46,5.46,0,0,0,7.46,2,.48.48,0,0,0,7,2.47v.92a.47.47,0,0,0,.47.47c1.07,0,3.59.18,3.59,2.2v5H9.66a.47.47,0,0,0-.47.47v.94a.47.47,0,0,0,.47.47h1.4v5c0,2-2.43,2.18-3.59,2.18a.48.48,0,0,0-.47.47v.94a.48.48,0,0,0,.46.47A5.44,5.44,0,0,0,12,20.38,5.46,5.46,0,0,0,16.54,22a.48.48,0,0,0,.46-.47v-.92a.47.47,0,0,0-.47-.47c-1.07,0-3.59-.18-3.59-2.2v-5h1.4a.47.47,0,0,0,.47-.47v-.94a.47.47,0,0,0-.47-.47h-1.4v-5c0-2,2.43-2.18,3.59-2.18A.48.48,0,0,0,17,3.41V2.47A.48.48,0,0,0,16.54,2,5.44,5.44,0,0,0,12,3.62Z',\n};\n\nexport default iconCursor;\n","// tslint:disable max-line-length\nimport IconDef from './IconDef';\n\nconst iconRedo: IconDef = {\n  name: 'redo',\n  pathDef: 'M12,2a10,10,0,0,1,6.89,2.77l1.44-1.44A1,1,0,0,1,22,4V9.42a1,1,0,0,1-1,1h-5.4a1,1,0,0,1-.69-1.65l1.69-1.69a6.77,6.77,0,1,0-.17,10.05.48.48,0,0,1,.66,0l1.6,1.6a.48.48,0,0,1,0,.7A10,10,0,1,1,12,2Z',\n};\n\nexport default iconRedo;\n","// tslint:disable max-line-length\nimport IconDef from './IconDef';\n\nconst iconSquare: IconDef = {\n  name: 'square',\n  pathDef: 'M21.93,3.6l-.06-.2a2.3,2.3,0,0,0-.15-.32,3.21,3.21,0,0,0-.21-.3,2.27,2.27,0,0,0-.31-.31l-.15-.11-.17-.11-.25-.11a1.09,1.09,0,0,0-.24-.07A1.9,1.9,0,0,0,19.85,2H4.14A2.14,2.14,0,0,0,2,4.14V19.85a1.88,1.88,0,0,0,.07.53,2.12,2.12,0,0,0,.49.91,1.06,1.06,0,0,0,.15.15,2.14,2.14,0,0,0,.9.49,2.35,2.35,0,0,0,.54.07H19.86A2.14,2.14,0,0,0,22,19.85V4.14A2.35,2.35,0,0,0,21.93,3.6Z',\n};\n\nexport default iconSquare;\n","// tslint:disable max-line-length\nimport IconDef from './IconDef';\n\nconst iconTextRotateVertical: IconDef = {\n  name: 'textRotateVertical',\n  pathDef: 'M15.75,5h-1.5L9.5,16h2.1l.9-2.2h5l.9,2.2h2.1Zm-2.62,7L15,7l1.87,5ZM6,19.75l3-3H7V4.25H5v12.5H3Z',\n};\n\nexport default iconTextRotateVertical;\n","// tslint:disable max-line-length\nimport IconDef from './IconDef';\n\nconst iconTextRotationNone: IconDef = {\n  name: 'textRotationNone',\n  pathDef: 'M12.75 3h-1.5L6.5 14h2.1l.9-2.2h5l.9 2.2h2.1L12.75 3zm-2.62 7L12 4.98 13.87 10h-3.74zm10.37 8l-3-3v2H5v2h12.5v2l3-3z',\n};\n\nexport default iconTextRotationNone;\n","// tslint:disable max-line-length\nimport IconDef from './IconDef';\n\nconst iconUndo: IconDef = {\n  name: 'undo',\n  pathDef: 'M12,2A10,10,0,0,0,5.09,4.77L3.65,3.33A1,1,0,0,0,2,4V9.42a1,1,0,0,0,1,1h5.4a1,1,0,0,0,.69-1.65L7.37,7.05A6.77,6.77,0,1,1,7.54,17.1a.48.48,0,0,0-.66,0l-1.6,1.6a.48.48,0,0,0,0,.7A10,10,0,1,0,12,2Z',\n};\n\nexport default iconUndo;\n","import maxBy from 'lodash/maxBy';\nimport range from 'lodash/range';\nimport values from 'lodash/values';\nimport React from 'react';\n\nimport classNames from 'classnames';\nimport { BLACK_SYMBOL } from 'config/global';\nimport { ContainerProps, mapStoreToContainerProps } from 'containers/container';\nimport Icon from 'icons/Icon';\nimport iconChecker from 'icons/iconChecker';\nimport iconCircle from 'icons/iconCircle';\nimport iconCursor from 'icons/iconCursor';\nimport iconRedo from 'icons/iconRedo';\nimport iconSquare from 'icons/iconSquare';\nimport iconTextRotateVertical from 'icons/iconTextRotateVertical';\nimport iconTextRotationNone from 'icons/iconTextRotationNone';\nimport iconUndo from 'icons/iconUndo';\nimport * as Enums from 'lib/crossword/Enums';\nimport { getLast, getNext, redo, undo } from 'lib/getHistoryMiddleware';\nimport { injectStore } from 'lib/react-store';\nimport { toggleDirection } from 'state/board';\nimport { L } from 'state/root';\nimport { getWordCounts } from 'state/shape';\nimport { setValueAtCursor } from 'state/viewer';\nimport { includes } from 'util/arrays';\n\nclass EditorStructureContainer extends React.Component<ContainerProps> {\n\n  onUndoClick = () => this.props.update(L.editor.set(undo(this.props.editorHistory)));\n\n  onRedoClick = () => this.props.update(L.editor.set(redo(this.props.editorHistory)));\n\n  onToggleBlackClick: React.MouseEventHandler<HTMLButtonElement> = () => {\n    this.props.update(L.editor.set(setValueAtCursor(BLACK_SYMBOL)));\n  };\n\n  onToggleDirectionClick: React.MouseEventHandler<HTMLButtonElement> = () => {\n    this.props.update(L.editor.board.set(toggleDirection));\n  };\n\n  renderToolbar() {\n    const { board, shape } = this.props.editor;\n    const directionIconDef = (board.direction === Enums.Direction.Across)\n      ? iconTextRotationNone\n      : iconTextRotateVertical;\n\n    return (\n      <div className=\"py-1 typ-1.5\">\n        <ul className=\"h-list h-list-1\">\n          <li>\n            <button\n              className=\"btn d-block\"\n              disabled={!getLast(this.props.editorHistory)}\n              onClick={this.onUndoClick}\n            >\n              <Icon def={iconUndo} className=\"d-block\" />\n            </button>\n          </li>\n          <li>\n            <button\n              className=\"btn d-block\"\n              disabled={!getNext(this.props.editorHistory)}\n              onClick={this.onRedoClick}\n            >\n              <Icon def={iconRedo} className=\"d-block\" />\n            </button>\n          </li>\n          <li>\n            <div className=\"vr mx-1\" />\n          </li>\n          <li>\n            <button className=\"btn btn--active d-block\">\n              <Icon def={iconChecker} className=\"d-block\" />\n            </button>\n          </li>\n          <li>\n            <button\n              className={classNames('btn d-block', {\n                'btn--active': includes(shape.blocks, board.cursor),\n              })}\n              onClick={this.onToggleBlackClick}\n            >\n              <Icon def={iconSquare} className=\"d-block\" />\n            </button>\n          </li>\n          <li>\n            <button className=\"btn d-block\">\n              <Icon def={iconCircle} className=\"d-block\" />\n            </button>\n          </li>\n          <li>\n            <button className=\"btn d-block\" onClick={this.onToggleDirectionClick}>\n              <Icon def={directionIconDef} className=\"d-block\" />\n            </button>\n          </li>\n          <li>\n            <button className=\"btn d-block\">\n              <Icon def={iconCursor} className=\"d-block\" />\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n  render() {\n    const { shape } = this.props.editor;\n    const wordCounts = getWordCounts(shape);\n    const maxGroupLength = maxBy(values(wordCounts), cellGroups => cellGroups.length)!.length;\n    return (\n      <React.Fragment>\n        {this.renderToolbar()}\n        <hr className=\"hr\" />\n        <div className=\"bar-graph\">\n          {range(1, shape.width + 1).map(n => {\n            const length = (wordCounts[n]) ? wordCounts[n].length : 0;\n            return (\n              <div\n                key={n}\n                className=\"bar-graph__bar\"\n                style={{\n                  left: (n / shape.width * 90) + 5 + '%',\n                  transform: `translateY(-${length / maxGroupLength * 100}%)`,\n                }}\n              />\n            );\n          })}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default injectStore(mapStoreToContainerProps)(EditorStructureContainer);\n","import clamp from 'lodash/clamp';\nimport React from 'react';\nimport { Route } from 'react-router';\n\nimport Grid from 'components/Grid';\nimport Tabs, { Tab } from 'components/Tabs';\nimport { BLACK_SYMBOL, BOARD_WIDTH } from 'config/global';\nimport CellsContainer from 'containers/CellsContainer';\nimport { ContainerProps, mapStoreToContainerProps } from 'containers/container';\nimport EditorFillContainer from 'containers/EditorFillContainer';\nimport EditorStructureContainer from 'containers/EditorStructureContainer';\nimport { emptyUndoHistory } from 'lib/getHistoryMiddleware';\nimport { injectStore } from 'lib/react-store';\nimport { setCursor, toggleDirection } from 'state/board';\nimport { fetchWordList } from 'state/dictionary';\nimport { L } from 'state/root';\nimport { setValueAtCursor } from 'state/viewer';\nimport { getIndex, getXY } from 'util/grid2Ds';\n\ntype EditorProps = ContainerProps<{ puzzleId?: string; }>;\n\ninterface EditorContainerState {\n  tab: number;\n}\n\nclass EditorContainer extends React.Component<EditorProps, EditorContainerState> {\n\n  tabs: Tab[] = [\n    {\n      label: 'Structure',\n      panel: () => <Route component={EditorStructureContainer} />,\n    },\n    {\n      label: 'Fill',\n      panel: () => <Route component={EditorFillContainer} />,\n    },\n    {\n      label: 'Clues',\n      panel: () => <div>clues</div>,\n    },\n    {\n      label: 'Share/Export',\n      panel: () => <div>share/export</div>,\n    },\n  ];\n\n  constructor(props: EditorProps) {\n    super(props);\n    this.state = {\n      tab: 0,\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n    this.props.update(L.dictionary.set(await fetchWordList()));\n  }\n\n  componentWillUnmount() {\n    this.props.update(L.editorHistory.set(emptyUndoHistory));\n    window.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  // TODO: Organize this better\n  // tslint:disable-next-line cyclomatic-complexity\n  onKeyDown = (e: KeyboardEvent) => {\n    const { board, shape } = this.props.editor;\n    let directionMultiplier = 1;\n    switch (e.key) {\n      case 'ArrowUp':\n        directionMultiplier = -1;\n\n      // tslint:disable-next-line no-switch-case-fall-through\n      case 'ArrowDown': {\n        const [ x ] = getXY(shape.width, board.cursor);\n        const min = getIndex(shape.width, [ x, 0 ]);\n        const max = getIndex(shape.width, [ x, shape.width - 1 ]);\n        const cursor = clamp(board.cursor + shape.width * directionMultiplier, min, max);\n        this.props.update(L.editor.board.set(setCursor(cursor)));\n        break;\n      }\n\n      case 'ArrowLeft':\n        directionMultiplier = -1;\n\n      // tslint:disable-next-line no-switch-case-fall-through\n      case 'ArrowRight': {\n        const [ , y ] = getXY(shape.width, board.cursor);\n        const min = getIndex(shape.width, [ 0, y ]);\n        const max = getIndex(shape.width, [ shape.width - 1, y ]);\n        const cursor = clamp(board.cursor + directionMultiplier, min, max);\n        this.props.update(L.editor.board.set(setCursor(cursor)));\n        break;\n      }\n\n      case 'Enter': return this.props.update(L.editor.board.set(toggleDirection));\n      case 'Backspace': return this.props.update(L.editor.set(setValueAtCursor('')));\n      default:\n        if (e.key.match(/^[a-z]$/i) || e.key === BLACK_SYMBOL) {\n          this.props.update(L.editor.set(setValueAtCursor(e.key.toUpperCase())));\n        }\n    }\n  };\n\n  onTabChange = (tab: number) => {\n    this.setState({ tab });\n  };\n\n  render() {\n    return (\n      <div className=\"grid\">\n        <div className=\"grid__col\">\n          <svg\n            width={BOARD_WIDTH}\n            height={BOARD_WIDTH}\n            viewBox={`0 0 ${BOARD_WIDTH} ${BOARD_WIDTH}`}\n            className=\"board\"\n          >\n            <Route component={CellsContainer} />\n            <Grid size={this.props.editor.shape.width} />\n          </svg>\n        </div>\n        <div className=\"grid__col\">\n          <Tabs\n            tabs={this.tabs}\n            active={this.state.tab}\n            onChange={this.onTabChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectStore(mapStoreToContainerProps)(EditorContainer);\n","import { Setter } from 'lib/lens';\n\nexport interface Middleware<T> {\n  (state: T, prevState?: T): T;\n}\n\nexport interface Listener<T> {\n  (newState: T): void;\n}\n\nexport interface Unsubscribe {\n  (): void;\n}\n\nexport const compose = <R>(fn1: (a: R) => R, ...fns: Array<(a: R) => R>) =>\n  fns.reduce((prevFn, nextFn) => value => prevFn(nextFn(value)), fn1);\n\nexport interface Store<T> {\n  getState: () => T;\n  update: (setter: Setter<T>) => void;\n  subscribe: (listener: (newState: T) => void) => Unsubscribe;\n}\n\nconst createStore = <T>(initialState: T, ...middleware: Middleware<T>[]): Store<T> => {\n  let state: T = middleware.reduce((s, m) => m(s), initialState);\n  const listeners: Listener<T>[] = [];\n\n  const getState = () => state;\n  const update = async (setter: Setter<T>) => {\n    const newState = setter(state);\n    const prevState = state;\n    state = middleware.reduce((s, m) => m(s, prevState), newState);\n    listeners.forEach(listener => listener(state));\n  };\n  const subscribe = (listener: Listener<T>): Unsubscribe => {\n    listeners.push(listener);\n    return () => {\n      const index = listeners.indexOf(listener);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  };\n\n  return { getState, update, subscribe };\n};\n\nexport default createStore;\n","import reduce from 'lodash/reduce';\n\nimport Dictionary from 'definitions/Dictionary';\nimport { Middleware } from 'lib/createStore';\nimport { Lens } from 'lib/lens';\n\n// tslint:disable-next-line no-any\nconst getLocalStorageMiddleware = <T>(prefix: string, lenses: Dictionary<Lens<T, any>>) => {\n  const middleware: Middleware<T> = (state, prevState) => {\n    return reduce(\n      lenses,\n      (s, lens, key) => {\n        if (!prevState) {\n          const storedValue = JSON.parse(localStorage.getItem(prefix + '.' + key)!);\n          if (storedValue) {\n            return lens.set((defaultState: {}) => ({ ...defaultState, ...storedValue }))(s);\n          }\n        }\n        const newValue = lens.get(state);\n        if (!prevState || newValue !== lens.get(prevState)) {\n          localStorage.setItem(prefix + '.' + key, JSON.stringify(newValue));\n        }\n        return state;\n      },\n      state,\n    );\n  };\n  return middleware;\n};\n\nexport default getLocalStorageMiddleware;\n","import createBrowserHistory from 'history/createBrowserHistory';\nimport React from 'react';\nimport { Route, Router, Switch } from 'react-router';\n\nimport EditorContainer from 'containers/EditorContainer';\nimport createStore from 'lib/createStore';\nimport getHistoryMiddleware from 'lib/getHistoryMiddleware';\nimport getLocalStorageMiddleware from 'lib/getLocalStorageMiddleware';\nimport { Provider } from 'lib/react-store';\nimport { defaultValue, L } from 'state/root';\n\nconst history = createBrowserHistory();\n\nconst store = createStore(\n  defaultValue,\n  getLocalStorageMiddleware('cross', { 'board': L.editor.board, 'shape': L.editor.shape }),\n  getHistoryMiddleware(\n    L.editor.get,\n    L.editorHistory,\n    [ L.editor.board.k('letters').get, L.editor.shape.k('blocks').get ],\n    200,\n  ),\n);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Provider store={store}>\n          <Switch>\n            <Route component={EditorContainer} />\n          </Switch>\n        </Provider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'App';\nimport * as serviceWorker from 'serviceWorker';\n\nimport 'index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/default.cd6fac4a.dict\";"],"sourceRoot":""}